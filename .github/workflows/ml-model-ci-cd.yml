name: ML Model CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'models/**'
      - '*.pickle'
      - '*.h5'
      - 'requirements.txt'
      - 'sentiment_analyzer.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'models/**'
      - '*.pickle'
      - '*.h5'
      - 'requirements.txt'
      - 'sentiment_analyzer.py'

jobs:
  test-models:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run model tests
      run: |
        python -m pytest tests/ -v
        
    - name: Test sentiment analyzer
      run: |
        python sentiment_analyzer.py
        
    - name: Validate model files
      run: |
        python scripts/validate_models.py
        
  model-validation:
    runs-on: ubuntu-latest
    needs: test-models
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Model performance validation
      run: |
        python scripts/validate_model_performance.py
        
    - name: Model compatibility check
      run: |
        python scripts/check_model_compatibility.py
        
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test-models, model-validation]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        
    - name: Run integration tests
      run: |
        python scripts/integration_tests.py
        
  deploy-production:
    runs-on: ubuntu-latest
    needs: [test-models, model-validation]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        
    - name: Health check
      run: |
        python scripts/health_check.py
        
    - name: Notify deployment
      run: |
        echo "Production deployment completed successfully!"
